---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

clone:
  depth: 50

steps:
- name: fetch
  image: docker:git
  commands:
  - git fetch --tags

- name: configure-buckets
  image: minio/mc:RELEASE.2018-09-26T00-42-43Z
  commands:
    - sleep 5
    - mc config host add minio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    - mc mb --region=eu-west-1 minio/drone-cache-bucket

- name: build
  image: golang:1.14.1-alpine3.11
  commands:
  - apk add --update make git
  - make drone-cache
  environment:
    CGO_ENABLED: 0

- name: lint
  image: golang:1.14.1-alpine3.11
  commands:
  - apk add --update make git curl
  - make lint
  environment:
    CGO_ENABLED: 0

- name: test
  image: golang:1.14.1-alpine3.11
  commands:
  - go test -mod=vendor -short -cover -failfast -tags=integration ./...
  environment:
    CGO_ENABLED: 0
    TEST_S3_ENDPOINT: minio:9000
    TEST_GCS_ENDPOINT: http://fakegcs:4443/storage/v1/
    TEST_STORAGE_EMULATOR_HOST: fakegcs:4443
    TEST_SFTP_HOST: sftp
    TEST_AZURITE_URL: azurite:10000
  volumes:
  - name: testdata
    path: /drone/src/tmp/testdata/cache

- name: release-snapshot-dev
  image: goreleaser/goreleaser:v0.131.1
  commands:
  - apk add --update make upx
  - goreleaser release --rm-dist --snapshot
  - echo "$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)" > .tags
  environment:
    GITHUB_TOKEN:
      from_secret: github_token

- name: release-docker-dev
  image: plugins/docker
  settings:
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.386
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.386\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    tags: dev
    username:
      from_secret: docker_username

- name: rebuild-cache
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    bucket: drone-cache-bucket
    mount:
    - vendor
    rebuild: true
    region: eu-west-1
    path_style: true
    endpoint: minio:9000
    exit_code: true
  environment:
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

- name: rebuild-cache-with-key
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    bucket: drone-cache-bucket
    cache_key: "{{ .Repo.Name }}_{{ checksum \"go.mod\" }}_{{ checksum \"go.sum\" }}_{{ arch }}_{{ os }}"
    mount:
    - vendor
    rebuild: true
    region: eu-west-1
    path_style: true
    endpoint: minio:9000
    exit_code: true
  environment:
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

- name: rebuild-cache-with-gzip
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    archive_format: gzip
    bucket: drone-cache-bucket
    cache_key: gzip
    mount:
    - vendor
    rebuild: true
    region: eu-west-1
    path_style: true
    endpoint: minio:9000
    exit_code: true
  environment:
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

- name: rebuild-cache-with-filesystem
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    archive_format: gzip
    backend: filesystem
    cache_key: volume
    mount:
    - vendor
    rebuild: true
    exit_code: true
  volumes:
  - name: cache
    path: /tmp/cache

- name: release-snapshot
  image: goreleaser/goreleaser:v0.131.1
  commands:
  - apk add --update make upx
  - goreleaser release --rm-dist --snapshot
  - echo "$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)" > .tags
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
  when:
    branch:
    - master
    event:
    - push

- name: release-docker-vsc-ref
  image: plugins/docker
  settings:
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.386
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.386\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    # tags: this releases with tags in .tags
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

- name: restore-cache-with-key
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    bucket: drone-cache-bucket
    cache_key: "{{ .Repo.Name }}_{{ checksum \"go.mod\" }}_{{ checksum \"go.sum\" }}_{{ arch }}_{{ os }}"
    mount:
    - vendor
    region: eu-west-1
    pull: always
    restore: true
    path_style: true
    endpoint: minio:9000
    exit_code: true
  environment:
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

- name: restore-cache-with-gzip
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    archive_format: gzip
    bucket: drone-cache-bucket
    cache_key: gzip
    mount:
    - vendor
    region: eu-west-1
    restore: true
    path_style: true
    endpoint: minio:9000
    exit_code: true
  environment:
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

- name: restore-cache-with-filesystem
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    archive_format: gzip
    backend: filesystem
    cache_key: volume
    mount:
    - vendor
    restore: true
    exit_code: true
  volumes:
  - name: cache
    path: /tmp/cache

- name: restore-cache-debug
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    debug: true
    restore: true
    pull: always

- name: restore-cache
  image: meltwater/drone-cache:dev
  pull: always
  settings:
    bucket: drone-cache-bucket
    mount:
    - vendor
    region: eu-west-1
    restore: true
    path_style: true
    endpoint: minio:9000
    exit_code: true
  environment:
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

- name: build-after
  image: golang:1.14.1-alpine3.11
  commands:
  - apk add --update make git
  - make drone-cache

services:
- name: minio
  image: minio/minio:RELEASE.2020-03-05T01-04-19Z
  commands:
  - minio server /data
  environment:
    MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
    MINIO_REGION: eu-west-1
    MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  ports:
  - 9000
- name: fakegcs
  image: fsouza/fake-gcs-server
  ports:
    - 4443
  commands:
  - fake-gcs-server -public-host fakegcs -scheme http
- name: sftp
  image: atmoz/sftp:alpine
  ports:
  - 22
  commands:
  - /entrypoint foo:pass:::sftp_test bar:pass:::plugin_test
- name: azurite
  image: mcr.microsoft.com/azure-storage/azurite
  commands:
  - azurite-blob --blobHost 0.0.0.0
  ports:
  - 10000

volumes:
- name: cache
  temp: {}
- name: testdata
  temp: {}

trigger:
  branch:
  - master
  event:
  - push
  - pull_request

---
kind: pipeline
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: fetch
  image: docker:git
  commands:
  - git fetch --tags

- name: release
  image: goreleaser/goreleaser:v0.131.1
  commands:
  - apk add --update make upx
  - make release
  environment:
    GITHUB_TOKEN:
      from_secret: github_token

- name: release-docker-latest
  image: plugins/docker
  settings:
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.386
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.386\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    tags: latest
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

- name: release-docker
  image: plugins/docker
  settings:
    auto_tag: true
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.386
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.386\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

- name: release-docker-linux-386
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-386
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.386
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.386\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

- name: release-docker-linux-amd64
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-amd64
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.amd64
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.amd64\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

- name: release-docker-linux-arm_5
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm_5
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.arm_5
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.arm_5\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

- name: release-docker-linux-arm_6
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm_6
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.arm_6
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.arm_6\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

- name: release-docker-linux-arm_7
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm_7
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.arm_7
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.arm_7\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

- name: release-docker-linux-arm64
  image: plugins/docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm64
    build_args_from_env:
    - BUILD_DATE
    - DOCKERFILE_PATH
    - VCS_REF
    - VERSION
    dockerfile: docker/Dockerfile.linux.arm64
    environment:
    - "BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%S%Z\")"
    - "DOCKERFILE_PATH=\"/docker/Dockerfile.linux.arm64\""
    - VCS_REF=$(git rev-parse --short HEAD)
    - VERSION=$(git describe --always --tags --dirty)
    password:
      from_secret: docker_password
    repo: meltwater/drone-cache
    username:
      from_secret: docker_username

trigger:
  event:
  - tag

...
